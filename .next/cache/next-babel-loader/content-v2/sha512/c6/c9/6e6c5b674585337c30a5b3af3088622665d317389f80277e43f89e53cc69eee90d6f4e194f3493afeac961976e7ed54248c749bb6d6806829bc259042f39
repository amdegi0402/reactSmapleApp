{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/akira/sampleApp/components/Counter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"Style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [this.props.message, \": \", this.props.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.style,\n        onClick: this.doAction,\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        suppressHydrationWarningle: this.style,\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":{"version":3,"sources":["/home/akira/sampleApp/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","render","message","count","style","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAM3BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,mCALV;AACJC,MAAAA,QAAQ,EAAC,MADL;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAKU;;AAEd,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAG;AACP,QAAGA,CAAC,CAACC,QAAL,EAAc;AACV,aAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACH;AACJ;;AAEDJ,EAAAA,KAAK,GAAE;AACH,WAAO,KAAKL,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA,mBAAI,KAAKV,KAAL,CAAWW,OAAf,QAA0B,KAAKX,KAAL,CAAWY,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,QAAA,OAAO,EAAE,KAAKV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,0BAA0B,EAAE,KAAKU,KAAzC;AAAgD,QAAA,OAAO,EAAE,KAAKR,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAhC0B;;AAmC/BP,OAAO,GAAGD,OAAO,CAAEiB,KAAD,IAAWA,KAAZ,CAAP,CAA0BhB,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component{\n    Style = {\n        fontSize:\"12pt\",\n        padding:\"5px 15px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.doAction = this.doAction.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    doAction(e){\n        if(e.shiftKey){\n            return this.props.dispatch({ type: 'DECREMENT' });\n        }else{\n            return this.props.dispatch({ type: 'INCREMENT' });\n        }\n    }\n\n    reset(){\n        return this.props.dispatch({ type: 'RESET'});\n    }\n\n    render(){\n        return(\n            <div>\n                <p>{this.props.message}: {this.props.count}</p>\n                <button style={this.style} onClick={this.doAction}>Count</button>\n                <button suppressHydrationWarningle={this.style} onClick={this.reset}>Reset</button>\n            </div>\n        )\n    }\n}\n\nCounter = connect((state) => state)(Counter);\nexport default Counter;"]},"metadata":{},"sourceType":"module"}