{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/akira/sampleApp/components/Counter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nvar Counter = /*#__PURE__*/function (_Component) {\n  _inherits(Counter, _Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"msgStyle\", {\n      fontSize: \"16pt\",\n      backgroundColor: \"#eef\",\n      padding: \"5px\"\n    });\n\n    _this.state = {\n      counter: 0,\n      msg: 'counter: 0'\n    };\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"doAction\",\n    value: function doAction() {\n      this.setState(function (state) {\n        var num = state.counter + 1;\n        return {\n          counter: num,\n          msg: \"counter: \" + num\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.doAction,\n        style: this.msgStyle,\n        children: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this);\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport { Counter as default };","map":{"version":3,"sources":["/home/akira/sampleApp/components/Counter.js"],"names":["React","Component","render","Counter","props","fontSize","backgroundColor","padding","state","counter","msg","doAction","bind","setState","num","msgStyle"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEqBC,O;;;;;AAOjB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,+DANP;AACPC,MAAAA,QAAQ,EAAC,MADF;AAEPC,MAAAA,eAAe,EAAC,MAFT;AAGPC,MAAAA,OAAO,EAAC;AAHD,KAMO;;AAEd,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,CADC;AAETC,MAAAA,GAAG,EAAC;AAFK,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AANc;AAOjB;;;;+BAES;AACN,WAAKC,QAAL,CAAc,UAACL,KAAD,EAAS;AACnB,YAAMM,GAAG,GAAGN,KAAK,CAACC,OAAN,GAAgB,CAA5B;AACA,eAAQ;AACJA,UAAAA,OAAO,EAAEK,GADL;AAEJJ,UAAAA,GAAG,EAAE,cAAcI;AAFf,SAAR;AAIH,OAND;AAOH;;;6BAEO;AACJ,0BAAO;AAAG,QAAA,OAAO,EAAE,KAAKH,QAAjB;AACH,QAAA,KAAK,EAAE,KAAKI,QADT;AAAA,kBAEF,KAAKP,KAAL,CAAWE;AAFT;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH;;;;EA/BgCT,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nexport default class Counter extends Component{\n    msgStyle = {\n        fontSize:\"16pt\",\n        backgroundColor:\"#eef\",\n        padding:\"5px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            counter:0,\n            msg:'counter: 0',\n        };\n        this.doAction = this.doAction.bind(this);\n    }\n\n    doAction(){\n        this.setState((state)=>{\n            const num = state.counter + 1;\n            return ({\n                counter: num,\n                msg: \"counter: \" + num\n            });\n        });\n    }\n\n    render(){\n        return <p onClick={this.doAction}\n            style={this.msgStyle}>\n            {this.state.msg}\n        </p>;\n    }\n}"]},"metadata":{},"sourceType":"module"}